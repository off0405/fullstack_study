3. 브라우저 객체(BOM)
브라우저에 내장된 객체를 가리키고 브라우저를 제어 및 조작 가능
0) window는 브라우저 객체의 최상위 객체

아래와 같은 하위 객체를 계층 구조로 포함
1) screen: 스크린 관련 정보 제공(화면 정보)크기~너비~
2) location: 현재 브라우저의 위치 정보(URL 정보 제공)
3) history: 브라우저에서 웹서핑을 할 때 기록들을 가짐
4) navigator: OS 및 브라우저에 대한 다양한 정보를 가짐.
5) document(DOM): 문서 객체, 웹 문서 관련

0) window 객체
open(): 팝업창 만드는 메소드
지정한 URL 페이지를 새 브라우저 창에 나타낼 수 있다.
예: 광고 팝업 등 - 브라우저에서 팝업 차단을 할 수 있어 안쓰임.

사용법 / open('URL', '새 창 이름', '새 창 옵션');
"예제 9"

; alert, prompt, confirm ;
alert(): 경고창을 나타낼 때 사용
window.alert('경고 메시지');
alert('잘못된 입력입니다.');

prompt(): 질의응답 창을 나타낼 때 사용
window.prompt('메시지', '기본값');
확인을 누르면 입력한 값을 반환, 취소를 누르면 null
const age = prompt('당신의 나이는?', '0');
console.log(age);

confirm(): 확인/취소 창을 나타낼 때 사용
window.confirm('메시지');
확인을 누르면 true를 반환, 취소를 누르면 false
const remove = confirm('정말로 삭제하시겠습니까?');
console.log(remove);



----------------------------------------------------------------------------------



일정한 시간 간격으로 코드 실행하기(2가지)
setInterval(): 일정한 시간 간격으로 코드를 반복 실행
clearInterval(): 변수를 이용해 setInterval()을 취소
변수 = setInterval(함수, 밀리초);
clearInterval(변수);
"예제 14" + "body에 button(cleaerInterval)"


setTimeout(): 일정 시간 뒤에 코드를 실행
clearTimeout(): 변수를 이용해 setTimeout()을 취소
변수 = setTimeout(함수, 밀리초);
clearTimeout(변수);

"예제 29" + "body에 button"

----------------------------------------------------------------------------------

1) screen 객체
사용자의 모니터(화면) 정보를 제공
ex) 모니터 너비나 높이 등

"예제 34"

2) location 객체
현재 URL과 관련된 속성과 메소드를 제공
ex) 현재 URL 정보(속성), 새로 고침(메소드)

"예제 41"

리다이렉트 하기 (3가지 방법)
: 다른 주소나 페이지로 보내기

"예제 52"


3) history 객체
사용자가 방문한 사이트의 기록을 남기고, 이전과 다음 페이지로 다시 돌아갈 수 있도록 제공한다.

"예제 72"

4) navigator 객체
현재 방문자가 사용하는 브라우저와 운영체제 정보를 제공 

"예제 86, body 128"